<?php
/**
 * @file
 *   Defines a Mixcloud provider for Scald.
 */

/**
 * Implements hook_scald_atom_providers.
 * Tell Scald that we'll be providing some Mixcloud atoms.
 */
function scald_mixcloud_scald_atom_providers() {
  return array(
    'audio' => 'Audio hosted on Mixcloud'
  );
}

function scald_mixcloud_scald_add_form(&$form, &$form_state) {
  $form['identifier'] = array(
    '#type' => 'textfield',
    '#title' => t('Mixcloud identifier or URL'),
    '#element_validate' => array('scald_mixcloud_validate_id'),
    '#default_value' => '',
  );
}

/**
 * Implements hook_scald_add_form_fill.
 */
function scald_mixcloud_scald_add_form_fill(&$atoms, $form, $form_state) {
  $atom = is_array($atoms) ? reset($atoms) : $atoms;

  // Get the identifier
  $identifier = scald_mixcloud_parse_id($form_state['values']['identifier'], TRUE);

  // Get track info
  $infos = scald_mixcloud_get_audio($identifier);

  $atom->base_id = $identifier;
  $atom->title = $infos->title;

  // Prefill the author
  $atom->scald_authors[LANGUAGE_NONE][0] = array(
    'tid' => 0,
    'taxonomy_term' => (object)(array('name' => $infos->author))
  );

  // Grab the thumbnail
  if (isset($infos->thumbnail)) {
    // Download a copy of the audio thumbnail.
    $thumb = drupal_http_request($infos->thumbnail);
    if ($thumb->code == 200) {
      $dest = 'public://mixcloud/' . $infos->id . '.jpg';
      $file = file_save_data($thumb->data, $dest);
    }

    // Set the file status to temporary
    $query = db_update('file_managed')
      ->condition('fid', $file->fid)
      ->fields(array('status' => 0))
      ->execute();

    $atom->scald_thumbnail[LANGUAGE_NONE][0] = (array)$file;
  }

  // Prefill tags
  foreach ($infos->tags as $index => $tag) {
    $atom->scald_tags[LANGUAGE_NONE][$index] = array(
      'tid' => $index,
      'taxonomy_term' => (object)(array('name' => $tag->name))
    );
  }

}

/**
 * Implements hook_scald_fetch.
 */
function scald_mixcloud_scald_fetch($atom, $type) {
  $file_items = field_get_items('scald_atom', $atom, 'scald_thumbnail');
  if (!empty($file_items)) {
    $file_item = current($file_items);
    if (file_exists($file_item['uri'])) {
      $atom->file_source = $atom->thumbnail_source = $file_item['uri'];
    }
  }
}

/**
 * Implements hook_scald_prerender.
 */
function scald_mixcloud_scald_prerender($atom, $context, $options, $mode) {
  if ($mode == 'atom') {
    try {
      // Fetch data for a track or playlist
      $embed = json_decode(file_get_contents("https://www.mixcloud.com/oembed/?url=".$atom->base_id."&format=json"));
    }
    catch (Exception $e) {
      watchdog('scald_mixcloud', 'Exception : @exception', array('@exception' => $e->getMessage()));
      return FALSE;
    }
    $atom->rendered->player = $embed->html;
  }
}

/**
 * Checks if an audio has already been imported, based on its audio id.
 */
function scald_mixcloud_already_imported($id) {
  $query = array('provider' => 'scald_mixcloud', 'base_id' => $id);
  return scald_search($query, FALSE, TRUE);
}

/**
 * TODO:
 * Form element validation handler for Mixcloud identifier
 */
function scald_mixcloud_validate_id($element, &$form_state) {
}


/**
 * TODO:
 * Parse an Audio ID and check validity
 */
function scald_mixcloud_parse_id($string, $check) {
  return $string;
}

/**
 * Get all necessary on an given audio track using Mixcloud API
 * @param $url
 *   Unique identifier of the audio track on Mixcloud
 * @return object
 *   Object containing all necessary info.
 */
function scald_mixcloud_get_audio($url) {

  // Grab artist and track from URL
  $url = array_filter(explode('/', parse_url($url)['path']));
  $artist = $url[1];
  $track = $url[2];

  try {
    // Fetch data for a track or playlist
    $data = json_decode(file_get_contents("https://api.mixcloud.com/".$artist."/".$track));
  }
  catch (Exception $e) {
    watchdog('scald_mixcloud', 'Exception : @exception', array('@exception' => $e->getMessage()));
    return FALSE;
  }
  $info = new stdClass();

  // ID
  $info->id = preg_replace('/^-+|-+$/', '', strtolower(preg_replace('/[^a-zA-Z0-9]+/', '-', $data->key)));
  // Title
  $info->title = $data->name;
  // Author
  $info->author = $data->user->name;
  // Thumbnail
  if ($data->pictures) {
    $info->thumbnail = $data->pictures->medium;
  }
  // Tags
  $info->tags = $data->tags;

  return $info;
}
